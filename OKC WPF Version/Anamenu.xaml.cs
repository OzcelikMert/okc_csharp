using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Navigation;
using System.Windows.Shapes;
using System.Data.OleDb;
using System.Data;
using System.Configuration;
using System.Collections;
using System.Text.RegularExpressions;
using System.Threading;

namespace OKC_WPF_Version {
    /// <summary>
    /// Interaction logic for MainWindow.xaml
    /// </summary>
    public partial class Anamenu : Window {
        public Anamenu() {
            InitializeComponent();
            //this.DataContext = dataGridView1.Columns[0];
        }
        OleDbConnection Baglan1 = new OleDbConnection("Provider = Microsoft.Jet.OLEDB.4.0; Data Source = VeriTabani/ClanList.mdb");

        public void Goster() {

            string ConString = ConfigurationManager.ConnectionStrings["Baglan"].ConnectionString;
            string CmdString = string.Empty;
            using (OleDbConnection con = new OleDbConnection(ConString)) {
                CmdString = "SELECT * FROM Clan_List"; //NuLL degeri tabloyada göstermemedsi gerekiyor 
                OleDbCommand cmd = new OleDbCommand(CmdString, con);
                OleDbDataAdapter sda = new OleDbDataAdapter(cmd);
                DataTable dt = new DataTable("Clan_List");
                sda.Fill(dt);
                dataGridView1.ItemsSource = dt.DefaultView;

            }
        }
            private void YanGrid4Label1_MouseLeftButtonUp(object sender, MouseButtonEventArgs e) {
            DetaySayf();
            this.Hide();
        }

        private void YanGrid3Label1_MouseLeftButtonUp(object sender, MouseButtonEventArgs e) {
            ;
        }

        private void YanGrid5Label1_MouseLeftButtonUp(object sender, MouseButtonEventArgs e) {
            Iletisimsayf();
            this.Hide();
        }

        private void YanGrid6Label1_MouseLeftButtonUp(object sender, MouseButtonEventArgs e) {
            Application.Current.Shutdown();
        }
        public void DetaySayf() {
            Detay dty = new Detay();
            dty.Show();
        }
        public void Iletisimsayf() {
            iletisim ile = new iletisim();
            ile.Show();
        }

        private void YanGrid4Label1_MouseEnter(object sender, MouseEventArgs e) {
            YanGrid4Label1.Foreground = Brushes.LightGreen;
            //YanGrid4.Background = Brushes.SteelBlue;
           // Border2.BorderThickness = new Thickness(4);
           // Border2.BorderBrush = Brushes.DeepSkyBlue;
        }

        private void YanGrid4Label1_MouseLeave(object sender, MouseEventArgs e) {
            YanGrid4Label1.Foreground = Brushes.White;
           // YanGrid4.Background = Brushes.SlateGray;
          //  Border2.BorderThickness = new Thickness(0);
           // Border2.BorderBrush = Brushes.Gold;
        }

        private void YanGrid5Label1_MouseEnter(object sender, MouseEventArgs e) {
            YanGrid5Label1.Foreground = Brushes.LightGreen;
            //Border3.BorderThickness = new Thickness(4);
            //Border3.BorderBrush = Brushes.Crimson;
        }

        private void YanGrid5Label1_MouseLeave(object sender, MouseEventArgs e) {
            YanGrid5Label1.Foreground = Brushes.White;
           // Border3.BorderThickness = new Thickness(0);
           // Border2.BorderBrush = Brushes.Orange;
        }

        private void dataGridView1_AutoGeneratedColumns(object sender, EventArgs e) {
        }


        private void KullaniciAdi_MouseLeave(object sender, MouseEventArgs e) {
            if (string.IsNullOrEmpty(KullaniciAdi.Text)) {

                KullaniciAdi.Foreground = Brushes.DarkSlateGray;
                KullaniciAdi.Text = "Oyuncu İsimi";

            } else {
                ;
            }
        }

        private void KullaniciAdi_MouseEnter(object sender, MouseEventArgs e) {
            if ( KullaniciAdi.Foreground == Brushes.DarkSlateGray) {

                KullaniciAdi.Text = "";
                KullaniciAdi.Foreground = Brushes.Black;

            } else {
                ;
            }
        }

        private void KullaniciAdi_KeyDown(object sender, KeyEventArgs e) {
           

            if ( KullaniciAdi.Foreground == Brushes.DarkSlateGray) {

                KullaniciAdi.Text = "";
                KullaniciAdi.Foreground = Brushes.Black;

            } else {
                ;
            }
            
        }
        
        private void Button1_Click(object sender, RoutedEventArgs e) {

         try {
                if (string.IsNullOrEmpty(KullaniciAdi.Text) || KullaniciAdi.Foreground==Brushes.DarkSlateGray) {
                    MessageBox.Show("Boş Yer Bıkma ! ");
                    KullaniciAdi.Foreground = Brushes.DarkSlateGray;
                    KullaniciAdi.Text = "Oyuncu İsimi";
                } else {
                Baglan1.Open();
                    OleDbCommand varmiYokmi = new OleDbCommand("select * from Clan_List where NickName = '"+KullaniciAdi.Text+"' ",Baglan1);
                    OleDbDataReader oku = varmiYokmi.ExecuteReader();
                    if (oku.Read()) {
                      MessageWindow.Show("\""+KullaniciAdi.Text+"\" isiminde kayıtli bir üye vardır !","Kayıtlı Üye",MessageBoxButton.OK,MessageBoxImage.Error);
                    Baglan1.Close();
                    } else {
                   
                    OleDbCommand komt = new OleDbCommand(null, Baglan1);
                    komt.CommandText = "INSERT INTO Clan_List (NickName,Pay) VALUES (@NickNamee,0)";
                    komt.Parameters.AddWithValue("@NickNamee", KullaniciAdi.Text);
                    komt.ExecuteNonQuery();
                    Baglan1.Close();
                    Goster();
                   MessageWindow.Show("İşlem Başarılı", "\"" + KullaniciAdi.Text + "\" isimli oyuncu başarıyla eklendi", MessageBoxButton.OK,MessageBoxImage.Warning);
                    KullaniciAdi.Foreground = Brushes.DarkSlateGray;
                    KullaniciAdi.Text = "Oyuncu İsimi";
                    }
                }
            } catch (Exception a) {
                MessageWindow.Show("HATA","Hata: \r " + a.ToString(), MessageBoxButton.OK,MessageBoxImage.Error); Baglan1.Close();
            }        
        }
        
        private void Button2_Click(object sender, RoutedEventArgs e) {

            try {
                       Baglan1.Open();
                  for (int i = 0; i < dataGridView1.Items.Count; i++) {
                      var item = dataGridView1.Items[i];
                      var mycheckbox = dataGridView1.Columns[0].GetCellContent(item) as CheckBox;
                      if ((bool)mycheckbox.IsChecked) {
                        string ID = (dataGridView1.SelectedCells[1].Column.GetCellContent(item) as TextBlock).Text;
                       OleDbCommand kmt2 = new OleDbCommand("select Pay from Clan_List where NickName ='" + ID + "'", Baglan1);
                        int Deger = (int)kmt2.ExecuteScalar();
                         if (Deger > 0) {
                          OleDbCommand kmt3 = new OleDbCommand("select NickName from Clan_List where NickName='" + ID + "'", Baglan1);
                          String Isim = (String)kmt3.ExecuteScalar();
                            var Mesaj = MessageWindow.Show("TİTLE","\""+ID+"\" İsimli Üyenin Şuan Üstünde Pay Vardır.Gerçekten Silmek İstediğinize Eminmisiniz ?",MessageBoxButton.YesNo,MessageBoxImage.Question);
                          if (Mesaj == MessageBoxResult.Yes) {
                              OleDbCommand kmt = new OleDbCommand("Delete from Clan_List where NickName='" + ID + "'", Baglan1);
                              kmt.ExecuteNonQuery();
                          } else {
                              ;
                          }
                        } else {
                         OleDbCommand kmt = new OleDbCommand("Delete from Clan_List where NickName='" + ID + "'", Baglan1);
                         kmt.ExecuteNonQuery();
                        }             
                     } else {
                        ;
                           }
            }
                          Baglan1.Close();
            Goster();
            } catch (Exception hata) {

               MessageWindow.Show("Hata", "Hata : " + hata.ToString(), MessageBoxButton.OK, MessageBoxImage.Error);
            }
        }
        private FrameworkElement _title;
        public void GetGoster() {
            while (true) {

                Thread.Sleep(TimeSpan.FromSeconds(3));
                this.Dispatcher.BeginInvoke(new Action(() => {

                    Goster();

                }));
            }
        }
        Thread th1;
        System.Windows.Forms.NotifyIcon notifyIcon;
        private void Window_Loaded(object sender, RoutedEventArgs e) {
            /* Notify Icon */
            notifyIcon = new System.Windows.Forms.NotifyIcon();
            notifyIcon.Icon = new System.Drawing.Icon("OKCIcon.ico");
            notifyIcon.Visible = false;
            notifyIcon.MouseDoubleClick += new System.Windows.Forms.MouseEventHandler(notifyIcon_Click);
            //notifyIcon.ShowBalloonTip(500, "OKC is started", "OKC is succesfully started. Thank you!", System.Windows.Forms.ToolTipIcon.Info);
            System.Windows.Forms.ContextMenu notifyContextMenu = new System.Windows.Forms.ContextMenu();
            notifyContextMenu.MenuItems.Add("Show", new EventHandler(Open_));
            notifyContextMenu.MenuItems.Add("Close", new EventHandler(Close_));
            notifyIcon.ContextMenu = notifyContextMenu;

            /* end Notify Icon */
            Goster();
            dataGridView1.Columns[1].IsReadOnly = true;
            dataGridView1.Columns[2].IsReadOnly =true;
            this._title = (FrameworkElement)this.Template.FindName("PART_Title", this);
            if (null != this._title) {
                this._title.MouseLeftButtonDown += new MouseButtonEventHandler(CekBirakGrid_MouseLeftButtonDown);
            }
            th1 = new Thread(GetGoster);
            th1.IsBackground = true;
            th1.Start();
        }

        private void Window_StateChanged(object sender, EventArgs e) {
            if (this.WindowState == WindowState.Minimized) {
                this.Hide();
                notifyIcon.Visible = true;
                notifyIcon.ShowBalloonTip(1000, "OKC is started", "OKC is succesfully started. Thank you!", System.Windows.Forms.ToolTipIcon.Info);

            } else if (this.WindowState == WindowState.Normal) {
                notifyIcon.Visible = false;
            }
        }

        private void Open_(object sender, EventArgs e) {
            this.Show();
            notifyIcon.Visible = false;
            this.WindowState = WindowState.Normal;
        }

        private void Close_(object sender, EventArgs e) {
            this.Close();
        }


        private void notifyIcon_Click(object sender, System.Windows.Forms.MouseEventArgs e) {
            this.Show();
            notifyIcon.Visible = false;
            this.WindowState = WindowState.Normal;
        }

        private void PayText_KeyDown(object sender, KeyEventArgs e) {
            if ( PayText.Foreground == Brushes.DarkSlateGray) {

                PayText.Text = "";
                PayText.Foreground = Brushes.Black;

            } else {
                ;
            }
        }

        private void PayText_MouseEnter(object sender, MouseEventArgs e) {
            if ( PayText.Foreground == Brushes.DarkSlateGray) {

                PayText.Text = "";
                PayText.Foreground = Brushes.Black;

            } else {
                ;
            }
        }

        private void PayText_MouseLeave(object sender, MouseEventArgs e) {
            if (string.IsNullOrEmpty(PayText.Text)) {

                PayText.Foreground = Brushes.DarkSlateGray;
                PayText.Text = "Verilecek Pay";

            } else {
                ;
            }
        }

        private void DropText_KeyDown(object sender, KeyEventArgs e) {
            if (DropText.Foreground == Brushes.DarkSlateGray) {

                DropText.Text = "";
                DropText.Foreground = Brushes.Black;

            } else {
                ;
            }
        }

        private void DropText_MouseLeave(object sender, MouseEventArgs e) {
            if (string.IsNullOrEmpty(DropText.Text)) {

                DropText.Foreground = Brushes.DarkSlateGray;
                DropText.Text = "Eşya";

            } else {
                ;
            }
        }

        private void DropText_MouseEnter(object sender, MouseEventArgs e) {
            if (DropText.Foreground == Brushes.DarkSlateGray) {

                DropText.Text = "";
                DropText.Foreground = Brushes.Black;

            } else {
                ;
            }
        }
        int id = 57;
        private void Button3_Click(object sender, RoutedEventArgs e) {
            try {
                    if (string.IsNullOrEmpty(PayText.Text) || string.IsNullOrEmpty(DropText.Text) || PayText.Foreground==Brushes.DarkSlateGray || DropText.Foreground==Brushes.DarkSlateGray ) {
                MessageBox.Show("Boş BIRAKMA");
            } else {
                int hatavermeme = 0;
                string NoktaDegeri1, NoktaDegeri2, NoktaDegeri3, MessagePay = "0", NoktaDegeri4, NoktaDegeri5, NoktaDegeri6, MessagePay2 = "0";
                for (int i = 0; i < dataGridView1.Items.Count; i++) {
                  var item = dataGridView1.Items[i];
                  var mycheckbox = dataGridView1.Columns[0].GetCellContent(item) as CheckBox;
                  if ((bool)mycheckbox.IsChecked) {
                        hatavermeme++;
                   } else {
                        ;
                    }
                }
                if (hatavermeme > 0) {
                    int YeniPay = int.Parse(PayText.Text) / hatavermeme;
                    if (YeniPay.ToString().Length > 0 && YeniPay.ToString().Length < 4) {
                        MessagePay2 = YeniPay.ToString();
                    } else if (YeniPay.ToString().Length == 4) {
                        NoktaDegeri4 = YeniPay.ToString().Substring(0, 1);
                        NoktaDegeri5 = YeniPay.ToString().Substring(1, 3);
                        MessagePay2 = NoktaDegeri4 + "." + NoktaDegeri5;
                    } else if (YeniPay.ToString().Length == 5) {
                        NoktaDegeri4 = YeniPay.ToString().Substring(0, 2);
                        NoktaDegeri5 = YeniPay.ToString().Substring(2, 3);
                        MessagePay2 = NoktaDegeri4 + "." + NoktaDegeri5;
                    } else if (YeniPay.ToString().Length == 6) {
                        NoktaDegeri4 = YeniPay.ToString().Substring(0, 3);
                        NoktaDegeri5 = YeniPay.ToString().Substring(3, 3);
                        MessagePay2 = NoktaDegeri4 + "." + NoktaDegeri5;
                    } else if (YeniPay.ToString().Length == 7) { // 1.4.0.1.125

                        NoktaDegeri4 = YeniPay.ToString().Substring(0, 1);
                        NoktaDegeri5 = YeniPay.ToString().Substring(1, 3);
                        NoktaDegeri6 = YeniPay.ToString().Substring(4, 3);
                        MessagePay2 = NoktaDegeri4 + "." + NoktaDegeri5 + "." + NoktaDegeri6;

                    } else if (YeniPay.ToString().Length == 8) {

                        NoktaDegeri4 = YeniPay.ToString().Substring(0, 2);
                        NoktaDegeri5 = YeniPay.ToString().Substring(2, 3);//
                        NoktaDegeri6 = YeniPay.ToString().Substring(5, 3);
                        MessagePay2 = NoktaDegeri4 + "." + NoktaDegeri5 + "." + NoktaDegeri6;

                    } else if (YeniPay.ToString().Length == 9) {

                        NoktaDegeri4 = YeniPay.ToString().Substring(0, 3);
                        NoktaDegeri5 = YeniPay.ToString().Substring(3, 3);
                        NoktaDegeri6 = YeniPay.ToString().Substring(6, 3);
                        MessagePay2 = NoktaDegeri4 + "." + NoktaDegeri5 + "." + NoktaDegeri6;

                    } else {
                        MessageBox.Show("HATA");
                    }
                    if (PayText.Text.Length > 0 && PayText.Text.Length < 4) {
                        MessagePay = PayText.Text;
                    } else if (PayText.Text.Length == 4) {
                        NoktaDegeri1 = PayText.Text.Substring(0, 1);
                        NoktaDegeri2 = PayText.Text.Substring(1, 3);
                        MessagePay = NoktaDegeri1 + "." + NoktaDegeri2;
                    } else if (PayText.Text.Length == 5) {
                        NoktaDegeri1 = PayText.Text.Substring(0, 2);
                        NoktaDegeri2 = PayText.Text.Substring(2, 3);
                        MessagePay = NoktaDegeri1 + "." + NoktaDegeri2;
                    } else if (PayText.Text.Length == 6) {
                        NoktaDegeri1 = PayText.Text.Substring(0, 3);
                        NoktaDegeri2 = PayText.Text.Substring(3, 3);
                        MessagePay = NoktaDegeri1 + "." + NoktaDegeri2;
                    } else if (PayText.Text.Length == 7) { // 1.4.0.1.125

                        NoktaDegeri1 = PayText.Text.Substring(0, 1);
                        NoktaDegeri2 = PayText.Text.Substring(1, 3);
                        NoktaDegeri3 = PayText.Text.Substring(4, 3);
                        MessagePay = NoktaDegeri1 + "." + NoktaDegeri2 + "." + NoktaDegeri3;

                    } else if (PayText.Text.Length == 8) {

                        NoktaDegeri1 = PayText.Text.Substring(0, 2);
                        NoktaDegeri2 = PayText.Text.Substring(2, 3);//
                        NoktaDegeri3 = PayText.Text.Substring(5, 3);
                        MessagePay = NoktaDegeri1 + "." + NoktaDegeri2 + "." + NoktaDegeri3;

                    } else if (PayText.Text.Length == 9) {

                        NoktaDegeri1 = PayText.Text.Substring(0, 3);
                        NoktaDegeri2 = PayText.Text.Substring(3, 3);
                        NoktaDegeri3 = PayText.Text.Substring(6, 3);
                        MessagePay = NoktaDegeri1 + "." + NoktaDegeri2 + "." + NoktaDegeri3;

                    } else {
                        MessageBox.Show("HATA");
                    }

                    string SimdikiZmn = DateTime.Now.ToString();
                    //-----------------------------------------1
                  var Mesaj2 = MessageWindow.Show("Pay Dağılımı", "Dağıtılmak istenen toplam pay : " + MessagePay + "\nToplam pay " + hatavermeme.ToString() + " paya bölünecektir \nSeçilen üye başına düşan pay miktarı : " + MessagePay2 + "\nPay Dağıtımına Eminmisiniz ?", MessageBoxButton.YesNo, MessageBoxImage.Question);
                    if (Mesaj2 == MessageBoxResult.Yes) {
                        Baglan1.Open();
                        OleDbCommand kmt4 = new OleDbCommand("select ToplamPay1 from ToplamPay where id=" + id + "", Baglan1);
                        string Deger3 = (string)kmt4.ExecuteScalar();
                        long yeniDeger3 = Convert.ToInt64(Deger3);
                        long VeriToplamPay = Convert.ToInt64(PayText.Text) + yeniDeger3;
                        OleDbCommand kmt5 = new OleDbCommand("UPDATE ToplamPay SET ToplamPay1 = '" + VeriToplamPay.ToString() + "' ", Baglan1);
                        OleDbCommand komt2 = new OleDbCommand(null, Baglan1);
                        komt2.CommandText = "INSERT INTO Detay (Tarih,Miktar) VALUES (@Tarihh,@Miktarr)";
                        komt2.Parameters.AddWithValue("@Tarihh", SimdikiZmn);
                        komt2.Parameters.AddWithValue("@Miktarr", int.Parse(PayText.Text));
                        kmt5.ExecuteNonQuery();
                        komt2.ExecuteNonQuery();
                        for (int i = 0; i < dataGridView1.Items.Count; i++) {
                            var item = dataGridView1.Items[i];
                            var mycheckbox = dataGridView1.Columns[0].GetCellContent(item) as CheckBox;
                            if ((bool)mycheckbox.IsChecked) {
                                string ID = (dataGridView1.SelectedCells[1].Column.GetCellContent(item) as TextBlock).Text;
                                OleDbCommand kmt2 = new OleDbCommand("select Pay from Clan_List where NickName='" + ID + "'", Baglan1);
                                int Deger2 = (int)kmt2.ExecuteScalar();
                                int YeniToplamPay = Deger2 + YeniPay;
                                OleDbCommand kmt = new OleDbCommand("UPDATE Clan_List SET Pay =" + YeniToplamPay + " WHERE NickName='" + ID + "'", Baglan1);
                                OleDbCommand kmt7 = new OleDbCommand("select Sayi from Detay where Tarih = '" + SimdikiZmn + "'", Baglan1);
                                kmt.ExecuteNonQuery();
                                int Deger4 = (int)kmt7.ExecuteScalar();
                                string yeniDeger4 = Deger4.ToString();
                                OleDbCommand kmt9 = new OleDbCommand("INSERT INTO Detay2 VALUES ('" + yeniDeger4 + "'," + YeniPay + ",'" + ID + "', '" + DropText.Text + "')", Baglan1);
                                kmt9.ExecuteNonQuery();

                            } else {
                                ;
                            }
                        }
                        Baglan1.Close();
                        MessageWindow.Show("İşlem Başarılı", "Pay Başarılı Bir Şekilde Değıtılmıştır", MessageBoxButton.OK, MessageBoxImage.Warning);
                        Goster();
                            PayText.Foreground = Brushes.DarkSlateGray;
                            DropText.Foreground = Brushes.DarkSlateGray;
                            PayText.Text = "Verilecek Pay";
                            DropText.Text = "Eşya";
                        } else {
                        ;
                    }
                } else {MessageWindow.Show("Hata", "Listeden Oyuncu Seçiniz !", MessageBoxButton.OK, MessageBoxImage.Error); }
            }
            } catch (Exception hata) {
             MessageWindow.Show("Hata", "Hata : " + hata.ToString(), MessageBoxButton.OK, MessageBoxImage.Error);
         }
        }


        private void LookButton_Click(object sender, RoutedEventArgs e) {
            try {
                string NoktaDegeri1, NoktaDegeri2, NoktaDegeri3, MessagePay, NoktaDegeri4, Degerler, Degerler2, TumDegerler = "", VerilenMiktarString = "",VerilenMiktarDotlu="";
                int columnIndex = dataGridView1.SelectedIndex;
                var item = dataGridView1.Items[columnIndex];
                string NickUye = (dataGridView1.SelectedCells[1].Column.GetCellContent(item) as TextBlock).Text;
                string Payi = (dataGridView1.SelectedCells[2].Column.GetCellContent(item) as TextBlock).Text;
                int VerilenMiktar=0;
               OleDbCommand Com = new OleDbCommand("select Sayi,VerilenMiktar,Drop from Detay2 where NickName = @NickName", Baglan1);
                Com.Parameters.AddWithValue("@NickName", NickUye);
                Baglan1.Open();
                OleDbDataReader dr = Com.ExecuteReader();
                while (dr.Read()) {
                    int DetaySayi = int.Parse(dr["Sayi"].ToString());
                    OleDbCommand Com2 = new OleDbCommand("Select VerilenMiktar From Detay2 where Sayi='" + dr["Sayi"].ToString() + "' and NickName = '"+NickUye+"'", Baglan1);
                    VerilenMiktar = (int)Com2.ExecuteScalar();
                    VerilenMiktarString = VerilenMiktar.ToString();

                    if (VerilenMiktarString.Length > 0 && VerilenMiktarString.Length < 4) {
                        VerilenMiktarDotlu = VerilenMiktarString;
                    } else if (VerilenMiktarString.Length > 3 && VerilenMiktarString.Length < 5) {
                        NoktaDegeri1 = VerilenMiktarString.Substring(0, 1);
                        NoktaDegeri2 = VerilenMiktarString.Substring(1, 3);
                        VerilenMiktarDotlu = NoktaDegeri1 + "." + NoktaDegeri2;
                    } else if (VerilenMiktarString.Length > 4 && VerilenMiktarString.Length < 6) {
                        NoktaDegeri1 = VerilenMiktarString.Substring(0, 2);
                        NoktaDegeri2 = VerilenMiktarString.Substring(2, 3);
                        VerilenMiktarDotlu = NoktaDegeri1 + "." + NoktaDegeri2;

                    } else if (VerilenMiktarString.Length > 5 && VerilenMiktarString.Length < 7) {
                        NoktaDegeri1 = VerilenMiktarString.Substring(0, 3);
                        NoktaDegeri2 = VerilenMiktarString.Substring(3, 3);
                        VerilenMiktarDotlu = NoktaDegeri1 + "." + NoktaDegeri2;
                       
                    } else if (VerilenMiktarString.Length > 6 && VerilenMiktarString.Length < 8) { // 1.4.0.1.125

                        NoktaDegeri1 = VerilenMiktarString.Substring(0, 1);
                        NoktaDegeri2 = VerilenMiktarString.Substring(1, 3);
                        NoktaDegeri3 =  VerilenMiktarString.Substring(4, 3);
                        VerilenMiktarDotlu = NoktaDegeri1 + "." + NoktaDegeri2 + "." + NoktaDegeri3;
                        

                    } else if (VerilenMiktarString.Length > 7 && VerilenMiktarString.Length < 9) {

                        NoktaDegeri1 = VerilenMiktarString.Substring(0, 2);
                        NoktaDegeri2 = VerilenMiktarString.Substring(2, 3);//
                        NoktaDegeri3 = VerilenMiktarString.Substring(5, 3);
                     VerilenMiktarDotlu = NoktaDegeri1 + "." + NoktaDegeri2 + "." + NoktaDegeri3;
                     

                    } else if (VerilenMiktarString.Length > 8 && VerilenMiktarString.Length < 10) {

                        NoktaDegeri1 = VerilenMiktarString.Substring(0, 3);
                        NoktaDegeri2 = VerilenMiktarString.Substring(3, 3);
                        NoktaDegeri3 = VerilenMiktarString.Substring(6, 3);
                       VerilenMiktarDotlu = NoktaDegeri1 + "." + NoktaDegeri2 + "." + NoktaDegeri3;
                       
                    } else {
                        NoktaDegeri1 = VerilenMiktarString.Substring(0, 1);
                        NoktaDegeri2 = VerilenMiktarString.Substring(1, 3);
                        NoktaDegeri3 = VerilenMiktarString.Substring(4, 3);
                        NoktaDegeri4 = VerilenMiktarString.Substring(7, 3);
                       VerilenMiktarDotlu = NoktaDegeri1 + "." + NoktaDegeri2 + "." + NoktaDegeri3 + "." + NoktaDegeri4;
                       
                    }
                    OleDbCommand Com3 = new OleDbCommand("Select Tarih From Detay where Sayi="+DetaySayi+"",Baglan1);
                    string tarih = (string)Com3.ExecuteScalar();
                   Degerler = "Verilen Miktar : "+VerilenMiktarDotlu+"   Eşya : \""+dr["Drop"].ToString()+"\"   Tarih : "+tarih+"\n";
                    Degerler2 = TumDegerler;
                    TumDegerler = Degerler2 + Degerler; 
                }
                dr.Close();
                 Baglan1.Close();
                   if (Payi.Length > 0 && Payi.Length < 4) {
                       MessageWindow.Show("Bilgi", "Üyenin Karakter Adı : " + NickUye + "\nAldığı Pay : " + Payi+"\n\n"+TumDegerler, MessageBoxButton.OK, MessageBoxImage.Information);
                   } else if (Payi.Length > 3 && Payi.Length < 5) {
                       NoktaDegeri1 = Payi.Substring(0, 1);
                       NoktaDegeri2 = Payi.Substring(1, 3);
                       MessagePay = NoktaDegeri1 + "." + NoktaDegeri2;
                       MessageWindow.Show("Bilgi", "Üyenin Karakter Adı : " + NickUye + "\nAldığı Pay : " + MessagePay + "\n\n" + TumDegerler, MessageBoxButton.OK, MessageBoxImage.Information);
                   } else if (Payi.Length > 4 && Payi.Length < 6) {
                       NoktaDegeri1 = Payi.Substring(0, 2);
                       NoktaDegeri2 = Payi.Substring(2, 3);
                       MessagePay = NoktaDegeri1 + "." + NoktaDegeri2;
                       MessageWindow.Show("Bilgi", "Üyenin Karakter Adı : " + NickUye + "\nAldığı Pay : " + MessagePay + "\n\n" + TumDegerler, MessageBoxButton.OK, MessageBoxImage.Information);
                   } else if (Payi.Length > 5 && Payi.Length < 7) {
                       NoktaDegeri1 = Payi.Substring(0, 3);
                       NoktaDegeri2 = Payi.Substring(3, 3);
                       MessagePay = NoktaDegeri1 + "." + NoktaDegeri2;
                    MessageWindow.Show("Bilgi", "Üyenin Karakter Adı : " + NickUye + "\nAldığı Pay : " + MessagePay + "\n\n" + TumDegerler, MessageBoxButton.OK, MessageBoxImage.Information);
                } else if (Payi.Length > 6 && Payi.Length < 8) { // 1.4.0.1.125

                       NoktaDegeri1 = Payi.Substring(0, 1);
                       NoktaDegeri2 = Payi.Substring(1, 3);
                       NoktaDegeri3 = Payi.Substring(4, 3);
                       MessagePay = NoktaDegeri1 + "." + NoktaDegeri2 + "." + NoktaDegeri3;
                    MessageWindow.Show("Bilgi", "Üyenin Karakter Adı : " + NickUye + "\nAldığı Pay : " + MessagePay + "\n\n" + TumDegerler, MessageBoxButton.OK, MessageBoxImage.Information);

                } else if (Payi.Length > 7 && Payi.Length < 9) {

                       NoktaDegeri1 = Payi.Substring(0, 2);
                       NoktaDegeri2 = Payi.Substring(2, 3);//
                       NoktaDegeri3 = Payi.Substring(5, 3);
                       MessagePay = NoktaDegeri1 + "." + NoktaDegeri2 + "." + NoktaDegeri3;
                    MessageWindow.Show("Bilgi", "Üyenin Karakter Adı : " + NickUye + "\nAldığı Pay : " + MessagePay + "\n\n" + TumDegerler, MessageBoxButton.OK, MessageBoxImage.Information);

                } else if (Payi.Length > 8 && Payi.Length < 10) {

                       NoktaDegeri1 = Payi.Substring(0, 3);
                       NoktaDegeri2 = Payi.Substring(3, 3);
                       NoktaDegeri3 = Payi.Substring(6, 3);
                       MessagePay = NoktaDegeri1 + "." + NoktaDegeri2 + "." + NoktaDegeri3;
                    MessageWindow.Show("Bilgi", "Üyenin Karakter Adı : " + NickUye + "\nAldığı Pay : " + MessagePay + "\n\n" + TumDegerler, MessageBoxButton.OK, MessageBoxImage.Information);

                } else {
                       NoktaDegeri1 = Payi.Substring(0, 1);
                       NoktaDegeri2 = Payi.Substring(1, 3);
                       NoktaDegeri3 = Payi.Substring(4, 3);
                       NoktaDegeri4 = Payi.Substring(7, 3);
                       MessagePay = NoktaDegeri1 + "." + NoktaDegeri2 + "." + NoktaDegeri3 + "." + NoktaDegeri4;
                    MessageWindow.Show("Bilgi", "Üyenin Karakter Adı : " + NickUye + "\nAldığı Pay : " + MessagePay + "\n\n" + TumDegerler, MessageBoxButton.OK, MessageBoxImage.Information);

                }


            }
            catch (Exception hata) {
                MessageWindow.Show("Hata", "Hata : " + hata.ToString(), MessageBoxButton.OK, MessageBoxImage.Error);
            }

        }

        private void LookButton_MouseEnter(object sender, MouseEventArgs e) {
        }

        private void LookButton_MouseLeave(object sender, MouseEventArgs e) {

        }

        private void KullaniciAdi_PreviewKeyDown(object sender, KeyEventArgs e) {
            if (e.Key == Key.Space) {
                e.Handled = true;
            }
            base.OnPreviewKeyDown(e);
        }

        private void PayText_PreviewKeyDown(object sender, KeyEventArgs e) {
            if (e.Key >= Key.NumPad0 && e.Key <= Key.NumPad9) {
                e.Handled = false; //NumPad te bulunan rakamlar.
            } else if (e.Key >= Key.D0 && e.Key <= Key.D9) {
                e.Handled = false; //Harf grubunun üstünde bulunan rakamlar. 
            } else if (e.Key == Key.Tab) {
                e.Handled = false; //Textboxlar arası TAB ile geçiş yapabilmek için.
            }
            else if(e.Key==Key.Back) {
                e.Handled = false;
            } else {
                e.Handled = true;
            }
            //var regex = new Regex(@"[^a-zA-Z\s]");
            /*  Regex regex = new Regex("[^0-9]");
              e.Handled = regex.IsMatch(e.Key.ToString());*/
            /*   if (e.Key == Key.Space || !regex.IsMatch(e.Key.ToString())) {
                   e.Handled = true;
               }
               base.OnPreviewKeyDown(e);*/
        }

        private void DropText_PreviewKeyDown(object sender, KeyEventArgs e) {
            if (e.Key == Key.Space) {
                e.Handled = true;
            }
            base.OnPreviewKeyDown(e);
        }
        private void CekBirakGrid_MouseLeftButtonDown(object sender, MouseButtonEventArgs e) {
            DragMove();
        }

        private void Window_Closing(object sender, System.ComponentModel.CancelEventArgs e) {

            MessageBoxResult mbresult = MessageBox.Show("Are you sure you want to close", "Closing Message", MessageBoxButton.YesNo);
            switch (mbresult) {
                case MessageBoxResult.Yes:
                    Application.Current.Shutdown(); break;
                case MessageBoxResult.No:
                    e.Cancel = true; break;
                default:
                    break;
            }
        }
    }
}
